{"version":3,"sources":["components/OverviewPage.js"],"names":["headCells","id","numeric","disablePadding","label","tooltip","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","padding","indeterminate","checked","onChange","map","headCell","key","title","align","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","color","palette","secondary","main","backgroundColor","lighten","light","flex","EnhancedTableToolbar","classes","disableDelete","onAddClick","onDeleteClick","className","clsx","variant","component","disabled","onClick","useStyles","width","paper","table","minWidth","disableVerticalPadding","statusIcon","marginRight","verticalAlign","backdrop","zIndex","drawer","createData","name","ruid","remark","status","priority","transformRuleset","ruleset","rules","push","OverviewPage","useTheme","history","React","useState","window","__pageData","rows","setRows","selected","setSelected","selectedLockedCount","setSelectedLockedCount","page","setPage","rowsPerPage","setRowsPerPage","remarkDialogOpen","setRemarkDialogOpen","remarkDialogContent","setRemarkDialogContent","confirmDeleteDialogOpen","setConfirmDeleteDialogOpen","lockType","setLockType","confirmLockDialogOpen","setConfirmLockDialogOpen","backdropOpen","setBackdropOpen","networkErrorDialogOpen","setNetworkErrorDialogOpen","useEffect","handleClick","_","selectedIndex","indexOf","isItemLocked","search","filter","row","length","isLocked","newSelected","concat","slice","handleRemarkDialogClose","emptyRows","Math","min","statusMap","on","text","icon","htmlColor","success","dark","off","locked","uncompiled","warning","handleConfirmDeleteDialogClose","source","useRef","current","cancel","handleConfirmLockDialogClose","handleNetworkErrorDialogClose","loadRules","console","warn","axios","CancelToken","get","apiBase","params","a","cancelToken","token","then","data","catch","error","isCancel","event","target","newLockedCount","newSelecteds","n","isItemSelected","hover","role","tabIndex","scope","style","display","handleEditClick","handleLockClick","height","colSpan","rowsPerPageOptions","count","backIconButtonText","nextIconButtonText","labelRowsPerPage","labelDisplayedRows","from","to","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","open","fullWidth","onClose","autoFocus","opt","newValue","find","splice","findIndex","i"],"mappings":"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","file":"static/js/8.b2f5f4e0.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: true, label: '规则名称' },\n    { id: 'ruid', numeric: false, disablePadding: false, label: 'RUID', tooltip: '规则唯一标识符' },\n    { id: 'remark', numeric: false, disablePadding: false, label: '规则备注' },\n    { id: 'status', numeric: false, disablePadding: false, label: '规则状态' },\n    { id: 'priority', numeric: true, disablePadding: false, label: '规则优先级', tooltip: '数值越大的规则优先级越高' },\n];\n\nfunction EnhancedTableHead(props) {\n    const { onSelectAllClick, numSelected, rowCount } = props;\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (headCell.tooltip ? (\n                    <Tooltip key={headCell.id} title={headCell.tooltip}>\n                        <TableCell\n                            align={headCell.numeric ? 'right' : 'left'}\n                            padding={headCell.disablePadding ? 'none' : 'default'}\n                        >\n                            {headCell.label}\n                        </TableCell>\n                    </Tooltip>\n                ) : (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                    >\n                        {headCell.label}\n                    </TableCell>\n                )))}\n                <TableCell align=\"right\">操作</TableCell>\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight: {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n    },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nfunction EnhancedTableToolbar(props) {\n    const classes = useToolbarStyles();\n    const { numSelected, rowCount, disableDelete, onAddClick, onDeleteClick } = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    选中 {numSelected} 条规则\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    目前共 {rowCount} 条规则\n                </Typography>\n            )}\n\n            {numSelected > 0 ? (\n                <Tooltip title={disableDelete ? \"选中的规则中包含锁定的规则\" : \"删除规则\"}>\n                    <span><IconButton\n                        disabled={disableDelete}\n                        onClick={onDeleteClick}\n                    ><DeleteIcon /></IconButton></span>\n                </Tooltip>\n            ) : (\n                <Tooltip title=\"新增规则\">\n                    <IconButton onClick={onAddClick}><AddIcon /></IconButton>\n                </Tooltip>\n            )}\n        </Toolbar>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n    },\n    table: {\n        minWidth: 750,\n    },\n    disableVerticalPadding: {\n        padding: '0 16px',\n    },\n    statusIcon: {\n        marginRight: theme.spacing(1),\n        '& svg': {\n            verticalAlign: 'bottom',\n        },\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nfunction createData(name, ruid, remark, status, priority) {\n    return { name, ruid, remark, status, priority };\n}\n\nfunction transformRuleset(ruleset) {\n    if (typeof ruleset !== \"object\" || !ruleset) return [];\n    const rules = [];\n    for (let ruid in ruleset) {\n        const { name, remark, status, priority } = ruleset[ruid];\n        rules.push(createData(name, ruid, remark, status, priority));\n    }\n    return rules;\n}\n\nexport default function OverviewPage(props) {\n    const theme = useTheme();\n    const classes = useStyles();\n    const { history } = props;\n    const [rows, setRows] = React.useState(window.__pageData.rules);\n    const [selected, setSelected] = React.useState([]);\n    const [selectedLockedCount, setSelectedLockedCount] = React.useState(0);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [remarkDialogOpen, setRemarkDialogOpen] = React.useState(false);\n    const [remarkDialogContent, setRemarkDialogContent] = React.useState(\"\");\n    const [confirmDeleteDialogOpen, setConfirmDeleteDialogOpen] = React.useState(false);\n    const [lockType, setLockType] = React.useState(['', true]);\n    const [confirmLockDialogOpen, setConfirmLockDialogOpen] = React.useState(false);\n    const [backdropOpen, setBackdropOpen] = React.useState(false);\n    const [networkErrorDialogOpen, setNetworkErrorDialogOpen] = React.useState(false);\n\n    React.useEffect(() => (() => {\n        window.__pageData.rules = rows;\n    }), [rows])\n\n    const isLocked = (ruid) => {\n        const search = rows.filter((row) => row.ruid === ruid);\n        if (search.length < 1) return false;\n        return search[0].status.indexOf(\"locked\") !== -1;\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            let newLockedCount = 0;\n            const newSelecteds = rows.map((n) => {\n                if (n.status.indexOf(\"locked\") !== -1) newLockedCount++;\n                return n.ruid;\n            });\n            setSelectedLockedCount(newLockedCount);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelectedLockedCount(0);\n        setSelected([]);\n    };\n\n    const handleClick = (_, ruid) => {\n        const selectedIndex = selected.indexOf(ruid);\n        const isItemLocked = isLocked(ruid);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, ruid);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        if (isItemLocked) setSelectedLockedCount(selectedLockedCount + (selectedIndex === -1 ? 1 : -1));\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (_, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleRemarkDialogClose = () => {\n        setRemarkDialogOpen(false);\n    };\n\n    const handleShowRemarkClick = (remark) => {\n        const showRemark = remark === \"\" ? \"（无备注）\" : remark;\n        setRemarkDialogContent(showRemark);\n        setRemarkDialogOpen(true);\n    };\n\n    const isSelected = (ruid) => selected.indexOf(ruid) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    const statusMap = {\n        on: {\n            text: \"生效\",\n            icon: <CheckCircleOutlineIcon htmlColor={theme.palette.success.dark} />,\n        },\n        off: {\n            text: \"未生效\",\n            icon: <HighlightOffIcon color=\"action\" />,\n        },\n        locked: {\n            text: \"锁定\",\n            icon: <LockOutlinedIcon color=\"action\" />,\n        },\n        uncompiled: {\n            text: \"未编译\",\n            icon: <ReportProblemOutlinedIcon htmlColor={theme.palette.warning.dark} />,\n        },\n    };\n\n    const handleAddClick = () => {\n        history.push(\"/edit\");\n    };\n\n    const handleEditClick = (ruid) => {\n        history.push(\"/edit/\" + ruid);\n    }\n\n    const handleDeleteClick = () => {\n        setConfirmDeleteDialogOpen(true);\n    };\n\n    const handleConfirmDeleteDialogClose = () => {\n        setConfirmDeleteDialogOpen(false);\n    };\n\n    const source = React.useRef();\n    React.useEffect(() => (() => {\n        if (backdropOpen) source.current.cancel();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }), []);\n\n    const handleConfirmDeleteDialogConfirmClick = () => {\n        setConfirmDeleteDialogOpen(false);\n        source.current = axios.CancelToken.source();\n        setBackdropOpen(true);\n        axios.get(window.__pageData.apiBase, {\n            params: {\n                a: \"removeRules\",\n                ruid: selected,\n            },\n            cancelToken: source.current.token,\n        }).then(({ data }) => {\n            setRows(transformRuleset(data));\n            setSelected([]);\n            setBackdropOpen(false);\n        }).catch((error) => {\n            if (!axios.isCancel(error)) {\n                console.error(error);\n                setNetworkErrorDialogOpen(true);\n            }\n            setBackdropOpen(false);\n        });\n    };\n\n    const handleLockClick = (ruid, isLocked) => {\n        setLockType([ruid, !isLocked]);\n        setConfirmLockDialogOpen(true);\n    };\n\n    const handleConfirmLockDialogClose = () => {\n        setConfirmLockDialogOpen(false);\n    };\n\n    const handleConfirmLockDialogConfirmClick = () => {\n        setConfirmLockDialogOpen(false);\n        source.current = axios.CancelToken.source();\n        setBackdropOpen(true);\n        axios.get(window.__pageData.apiBase, {\n            params: {\n                a: \"lockRule\",\n                ruid: lockType[0],\n                opt: lockType[1] ? 1 : 0,\n            },\n            cancelToken: source.current.token,\n        }).then(() => {\n            setRows((rows) => {\n                const newValue = rows;\n                ((status) => {\n                    if (lockType[1]) status.push(\"locked\");\n                    else status.splice(status.findIndex((i) => i === \"locked\"), 1);\n                })(newValue.find((row) => row.ruid === lockType[0]).status);\n                return newValue;\n            });\n            setBackdropOpen(false);\n        }).catch((error) => {\n            if (!axios.isCancel(error)) {\n                console.error(error);\n                setNetworkErrorDialogOpen(true);\n            }\n            setBackdropOpen(false);\n        });\n    };\n\n    const handleNetworkErrorDialogClose = () => {\n        setNetworkErrorDialogOpen(false);\n    };\n\n    // 调试用代码\n    if (!window.loadRules) {\n        console.warn(\"请移除 window.loadRules 调试代码\");\n        window.loadRules = () => {\n            console.warn(\"当你还在调用 window.loadRules 时，你应该反思一下你是不是有什么问题\");\n            source.current = axios.CancelToken.source();\n            setBackdropOpen(true);\n            axios.get(window.__pageData.apiBase, {\n                params: {\n                    a: \"removeRules\",\n                    ruid: [],\n                },\n                cancelToken: source.current.token,\n            }).then(({ data }) => {\n                setRows(transformRuleset(data));\n                setSelected([]);\n                setBackdropOpen(false);\n            }).catch((error) => {\n                if (!axios.isCancel(error)) {\n                    console.error(error);\n                    setNetworkErrorDialogOpen(true);\n                }\n                setBackdropOpen(false);\n            });\n        };\n    }\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar\n                    numSelected={selected.length}\n                    rowCount={rows.length}\n                    disableDelete={selectedLockedCount > 0}\n                    onAddClick={handleAddClick}\n                    onDeleteClick={handleDeleteClick}\n                />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            onSelectAllClick={handleSelectAllClick}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row) => {\n                                    const isItemSelected = isSelected(row.ruid);\n                                    const isItemLocked = row.status.indexOf(\"locked\") !== -1;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            role=\"checkbox\"\n                                            tabIndex={-1}\n                                            key={row.ruid}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    onClick={(event) => handleClick(event, row.ruid)}\n                                                    checked={isItemSelected}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell><code>{row.ruid}</code></TableCell>\n                                            <TableCell className={classes.disableVerticalPadding}>\n                                                <Button onClick={() => handleShowRemarkClick(row.remark)}>点击查看</Button>\n                                            </TableCell>\n                                            <TableCell className={classes.disableVerticalPadding}>\n                                                {row.status.map((status) => (\n                                                    <Tooltip key={status} title={statusMap[status].text}>\n                                                        <span className={classes.statusIcon}>{statusMap[status].icon}</span>\n                                                    </Tooltip>\n                                                ))}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.priority}</TableCell>\n                                            <TableCell align=\"right\" className={classes.disableVerticalPadding}>\n                                                <Tooltip title={isItemLocked ? \"锁定状态下禁止编辑\" : \"编辑\"}>\n                                                    <span style={{ display: \"inline-block\" }}>\n                                                        <IconButton\n                                                            disabled={isItemLocked}\n                                                            onClick={() => handleEditClick(row.ruid)}\n                                                        ><EditIcon /></IconButton>\n                                                    </span>\n                                                </Tooltip>\n                                                <Tooltip title={isItemLocked ? \"解锁\" : \"锁定\"}>\n                                                    <span style={{ display: \"inline-block\" }}>\n                                                        <IconButton onClick={() => handleLockClick(row.ruid, isItemLocked)}>\n                                                            {isItemLocked ? <LockOpenIcon /> : <LockOutlinedIcon />}\n                                                        </IconButton>\n                                                    </span>\n                                                </Tooltip>\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 53 * emptyRows }}>\n                                    <TableCell colSpan={headCells.length + 2} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonText=\"上一页\"\n                    nextIconButtonText=\"下一页\"\n                    labelRowsPerPage=\"每页规则数：\"\n                    labelDisplayedRows={({ from, to, count }) => `${count} 条中的第 ${from} 至 ${to} 条`}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <Dialog\n                open={remarkDialogOpen}\n                fullWidth\n                onClose={handleRemarkDialogClose}\n            >\n                <DialogTitle>查看规则备注</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {remarkDialogContent}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleRemarkDialogClose} color=\"primary\" autoFocus>关闭</Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog\n                open={confirmDeleteDialogOpen}\n                onClose={handleConfirmDeleteDialogClose}\n            >\n                <DialogTitle>确定删除这些规则吗？</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        此操作不可逆，被删除的规则将无法恢复。\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleConfirmDeleteDialogConfirmClick} color=\"secondary\">\n                        确定\n                    </Button>\n                    <Button onClick={handleConfirmDeleteDialogClose} color=\"primary\" autoFocus>\n                        取消\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog\n                open={confirmLockDialogOpen}\n                onClose={handleConfirmLockDialogClose}\n            >\n                <DialogTitle>确定{lockType[1] ? \"锁定\" : \"解锁\"}这条规则吗？</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {lockType[1] ? \"规则被锁定后，除非手动解锁，否则将无法被编辑。这能够有效降低误操作的可能性。\"\n                            : \"规则被解锁后，将可以直接被编辑。这可能会增加误操作的风险。\"}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleConfirmLockDialogConfirmClick} color=\"secondary\">\n                        确定\n                    </Button>\n                    <Button onClick={handleConfirmLockDialogClose} color=\"primary\" autoFocus>\n                        取消\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Backdrop className={classes.backdrop} open={backdropOpen}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n            <Dialog\n                open={networkErrorDialogOpen}\n                onClose={handleNetworkErrorDialogClose}\n            >\n                <DialogTitle>请求后端 API 失败！</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>可能是网络错误或后端处理失败，请打开开发人员工具查看详细信息。</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleNetworkErrorDialogClose} color=\"primary\" autoFocus>\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n"],"sourceRoot":""}